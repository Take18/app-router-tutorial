import Head from "next/head";
import Link from "next/link";
import { use, useCallback } from "react";
import { DeleteButton } from "./components/deleteButton";
import { Todo } from "./types/Todo";
import { EditButton } from "./components/editButton";

const Todos = () => {
  const todos = use(fetchTodos());

  const isUpdated = useCallback((todo: Todo) => {
    return todo.createdAt.toISOString() !== todo.updatedAt.toISOString();
  }, []);

  return (
    <>
      <Head>
        <title>Todo</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center">
        <h1 className="text-3xl">Todo</h1>
        <div className="flex w-4/5 flex-col gap-4">
          {todos.map((todo) => (
            <div
              key={todo.id}
              className="flex w-full items-center justify-between"
            >
              <p>
                {todo.title}
                {isUpdated(todo) && (
                  <span className="text-sm text-gray-400">(Edited)</span>
                )}
              </p>
              <div className="flex w-44 justify-between">
                <DeleteButton />
                <EditButton todo={todo} />
              </div>
            </div>
          ))}
        </div>
      </main>
    </>
  );
};

export default Todos;

const fetchTodos = async (): Promise<Todo[]> => {
  return [
    {
      id: 1,
      title: "title",
      description: "Description",
      createdAt: new Date(),
      updatedAt: new Date(),
      deletedAt: null,
    },
    {
      id: 2,
      title: "title2",
      description: "Description",
      createdAt: new Date(),
      updatedAt: new Date(),
      deletedAt: null,
    },
    {
      id: 3,
      title: "title3",
      description: "Description",
      createdAt: new Date(),
      updatedAt: new Date(),
      deletedAt: null,
    },
  ];
};
